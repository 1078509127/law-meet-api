{"remainingRequest":"D:\\Projects\\java\\law-meet-api\\law-meet-vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Projects\\java\\law-meet-api\\law-meet-vue\\src\\components\\Breadcrumb\\index.vue?vue&type=script&lang=js","dependencies":[{"path":"D:\\Projects\\java\\law-meet-api\\law-meet-vue\\src\\components\\Breadcrumb\\index.vue","mtime":1720695645741},{"path":"D:\\Projects\\java\\law-meet-api\\law-meet-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1720774706922},{"path":"D:\\Projects\\java\\law-meet-api\\law-meet-vue\\node_modules\\@vue\\cli-plugin-babel\\node_modules\\babel-loader\\lib\\index.js","mtime":1720774708117},{"path":"D:\\Projects\\java\\law-meet-api\\law-meet-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1720774706922},{"path":"D:\\Projects\\java\\law-meet-api\\law-meet-vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1720774708700}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyBnZW5lcmF0ZVRpdGxlIH0gZnJvbSAnQC91dGlscy9pMThuJw0KaW1wb3J0IHBhdGhUb1JlZ2V4cCBmcm9tICdwYXRoLXRvLXJlZ2V4cCcNCg0KZXhwb3J0IGRlZmF1bHQgew0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICBsZXZlbExpc3Q6IG51bGwNCiAgICB9DQogIH0sDQogIHdhdGNoOiB7DQogICAgJHJvdXRlKCkgew0KICAgICAgdGhpcy5nZXRCcmVhZGNydW1iKCkNCiAgICB9DQogIH0sDQogIGNyZWF0ZWQoKSB7DQogICAgdGhpcy5nZXRCcmVhZGNydW1iKCkNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIGdlbmVyYXRlVGl0bGUsDQogICAgZ2V0QnJlYWRjcnVtYigpIHsNCiAgICAgIGNvbnN0IHsgcGFyYW1zIH0gPSB0aGlzLiRyb3V0ZQ0KICAgICAgbGV0IG1hdGNoZWQgPSB0aGlzLiRyb3V0ZS5tYXRjaGVkLmZpbHRlcihpdGVtID0+IHsNCiAgICAgICAgaWYgKGl0ZW0ubmFtZSkgew0KICAgICAgICAgIC8vIFRvIHNvbHZlIHRoaXMgcHJvYmxlbSBodHRwczovL2dpdGh1Yi5jb20vUGFuSmlhQ2hlbi92dWUtZWxlbWVudC1hZG1pbi9pc3N1ZXMvNTYxDQogICAgICAgICAgdmFyIHRvUGF0aCA9IHBhdGhUb1JlZ2V4cC5jb21waWxlKGl0ZW0ucGF0aCkNCiAgICAgICAgICBpdGVtLnBhdGggPSB0b1BhdGgocGFyYW1zKQ0KICAgICAgICAgIHJldHVybiB0cnVlDQogICAgICAgIH0NCiAgICAgIH0pDQogICAgICBjb25zdCBmaXJzdCA9IG1hdGNoZWRbMF0NCiAgICAgIGlmIChmaXJzdCAmJiBmaXJzdC5uYW1lLnRyaW0oKS50b0xvY2FsZUxvd2VyQ2FzZSgpICE9PSAnRGFzaGJvYXJkJy50b0xvY2FsZUxvd2VyQ2FzZSgpKSB7DQogICAgICAgIG1hdGNoZWQgPSBbeyBwYXRoOiAnL2Rhc2hib2FyZCcsIG1ldGE6IHsgdGl0bGU6ICdkYXNoYm9hcmQnIH19XS5jb25jYXQobWF0Y2hlZCkNCiAgICAgIH0NCiAgICAgIHRoaXMubGV2ZWxMaXN0ID0gbWF0Y2hlZA0KICAgIH0NCiAgfQ0KfQ0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/Breadcrumb","sourcesContent":["<template>\r\n  <el-breadcrumb class=\"app-breadcrumb\" separator=\"/\">\r\n    <transition-group name=\"breadcrumb\">\r\n      <el-breadcrumb-item v-for=\"(item,index) in levelList\" v-if=\"item.meta.title\" :key=\"item.path\">\r\n        <span v-if=\"item.redirect==='noredirect'||index==levelList.length-1\" class=\"no-redirect\">{{ generateTitle(item.meta.title) }}</span>\r\n        <router-link v-else :to=\"item.redirect||item.path\">{{ generateTitle(item.meta.title) }}</router-link>\r\n      </el-breadcrumb-item>\r\n    </transition-group>\r\n  </el-breadcrumb>\r\n</template>\r\n\r\n<script>\r\nimport { generateTitle } from '@/utils/i18n'\r\nimport pathToRegexp from 'path-to-regexp'\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      levelList: null\r\n    }\r\n  },\r\n  watch: {\r\n    $route() {\r\n      this.getBreadcrumb()\r\n    }\r\n  },\r\n  created() {\r\n    this.getBreadcrumb()\r\n  },\r\n  methods: {\r\n    generateTitle,\r\n    getBreadcrumb() {\r\n      const { params } = this.$route\r\n      let matched = this.$route.matched.filter(item => {\r\n        if (item.name) {\r\n          // To solve this problem https://github.com/PanJiaChen/vue-element-admin/issues/561\r\n          var toPath = pathToRegexp.compile(item.path)\r\n          item.path = toPath(params)\r\n          return true\r\n        }\r\n      })\r\n      const first = matched[0]\r\n      if (first && first.name.trim().toLocaleLowerCase() !== 'Dashboard'.toLocaleLowerCase()) {\r\n        matched = [{ path: '/dashboard', meta: { title: 'dashboard' }}].concat(matched)\r\n      }\r\n      this.levelList = matched\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\r\n  .app-breadcrumb.el-breadcrumb {\r\n    display: inline-block;\r\n    font-size: 14px;\r\n    line-height: 50px;\r\n    margin-left: 10px;\r\n    .no-redirect {\r\n      color: #97a8be;\r\n      cursor: text;\r\n    }\r\n  }\r\n</style>\r\n"]}]}